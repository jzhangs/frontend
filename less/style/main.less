@charset "utf-8";

// 1. comments
/* comments build to css */
// comments not build to css

// 2. variables

@test_width: 300px;
.box {
    width: @test_width;
    height: @test_width;
    background-color: yellow;
    .border;
}

// Mixin
// mixin variables

.border {
    border: solid 5px pink;
}

.box2 {
    .box;
    margin-left: 100px;
}

// mixin with arguments

.border_02(@border_width) {
    border: solid yellow @border_width;
}

.test_mixin {
    .border_02(30px);
}

.border_03(@border_width:10px) {
    border: solid green @border_width;
}

.test_minin_03 {
    .border_03(50px);
}

// argumments' pattern match

.sanjiao {
    // width: 0;
    // height: 0;
    // overflow: hidden;

    // border-width: 10px;
    // border-color: red transparent transparent transparent;
    // border-style: solid;
    .triangle(bottom);
}

.triangle(@_, @w: 5px, @c: #ccc) {
    width: 0;
    height: 0;
    overflow: hidden;
}

.triangle(top, @w: 5px, @c:#ccc) {
    border-width: @w;
    border-color: transparent transparent @c transparent;
    border-style: dashed dashed solid dashed;
}

.triangle(bottom, @w: 5px, @c:#ccc) {
    border-width: @w;
    border-color: @c transparent transparent transparent;
    border-style: solid dashed dashed dashed;
}

// calc

@test_01: 300rem;
.box_02 {
    width: @test_01 / 7;
    color: #ccc - 10;
}

// nesting

.list {
    width: 600px;
    margin: 30px auto;
    padding: 0;
    list-style: none;

    li {
        height: 30px;
        line-height: 30px;
        background-color: pink;
        margin-bottom: 5px;
    }

    a {
        float: left;
        // & indicates parent selector
        &:hover {
            color: red;
        }
    }

    span {
        float: right;
    }
}

// arguments
.border_arg(@w: 30px, @c:red, @xx: solid) {
    border: @arguments
}

.test_arguments {
    .border_arg(40px);
}

// don't compile, keep as it is.
.test_03 {
    width: ~'300px - 30px';
}

// important will be added to derivated rules, try avoid it
.test_important {
    .border_03() !important;
    width: 100px;
}
